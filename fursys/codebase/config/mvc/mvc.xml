<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

	<!-- Annotation Setup -->
	<context:annotation-config />
	<mvc:annotation-driven />
	<!-- Set up basic handler adapters -->
	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
	<!-- Load in URLs that are not relative to /ptc1 -->
	<bean id="defaultHandlerMapping"
		class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<!-- Property-based mappings should override the annotated mappings -->
		<property name="order" value="100" />
		<property name="alwaysUseFullPath" value="true" />
		<property name="mappings">
			<ref bean="defaultHandlerMappings" />
		</property>
	</bean>

	<bean id="defaultHandlerMappings"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean" />

	<!-- View Resolution -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>

	<!-- Exception Handling -->
    <bean id="exceptionController" class="com.ptc.mvc.controllers.ExceptionController" />
    <bean id="compositeExceptionResolver" class="org.springframework.web.servlet.handler.HandlerExceptionResolverComposite">
        <property name="exceptionResolvers">
            <list>
                <bean class="com.ptc.mvc.components.support.CustomDefaultHandlerExceptionResolver"/>
                <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
                    <property name="defaultErrorView" value="/ptc1/error" />
                </bean>
            </list>
        </property>
        <!-- higher priority -->
        <property name="order" value="0"/>
    </bean>

	<!-- Manages mappings for typeBased lookup-->
	<bean id="typeBasedBeanNameFactory" class="com.ptc.mvc.util.DefaultTypeBasedNameFactory" />

	<!-- Default resolver -->
	<bean id="defaultComponentBuilderResolver"
		class="com.ptc.mvc.components.support.DefaultComponentBuilderResolver" />

	<alias alias="configurableComponentBuilderResolver" name="defaultComponentBuilderResolver" />

	<!-- HttpSession-scoped DataSourceSession -->
	<bean id="dataSourceSession" factory-bean="dataSourceManager"
		factory-method="newDataSourceSession" scope="session">
		<aop:scoped-proxy />
	</bean>

	<!-- Assigns a DataSourceSession to DataSourceSessionAware beans -->
	<bean id="dataSourceSessionAwareProcessor"
		class="com.ptc.mvc.ds.server.support.DataSourceSessionAwareProcessor">
		<property name="session" ref="dataSourceSession" />
	</bean>

	<!-- Service for DataSource polling -->
	<bean id="dataSourceService" class="com.ptc.mvc.ds.server.rpc.DefaultDataSourceService" />

	<!-- Base config, concrete ones need to specify a serializer -->
	<bean id="abstractDataSourcePoller" class="com.ptc.mvc.components.ds.DataSourcePoller"
		abstract="true">
		<property name="service" ref="dataSourceService" />
	</bean>

</beans>
